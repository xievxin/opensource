apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.xx.fasksdk"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
}


buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath 'com.xx.fastsdk:test:0.3.0'
    }
}
//buildscript{
//    repositories {
//        jcenter()
//    }
//    dependencies {
//        classpath 'com.xx.fastsdk:beta:+'
//    }
//}
apply plugin: 'com.xx.fastsdk'


task("namespace").doLast {
    FileReader fileReader = new FileReader(new File("app/src/main/test.xml"))

    StringBuffer sb = new StringBuffer()

    boolean _xml_start = false
    boolean _xml_end = false
    int len
    char c
    while ((len = fileReader.read()) != -1) {
        c = (char) len
        if (c == '<') {
            _xml_start = true
            continue
        } else if (c == '>') {
            if (!_xml_end) {
                _xml_end = true
                continue
            }
            break
        } else {
            if (_xml_start && _xml_end) {
                sb.append(c)
            }
        }
    }
    fileReader.close()
    println("\ngot it..." + sb.toString()+"\n-------\n")

    def xmlnsMap = [:]
    def attrs = sb.toString().trim().split("\\s+")
    attrs.each {
        if(it.toString().startsWith("xmlns:")) {
            def str = it.toString().replaceFirst("xmlns:", "").split("=")
            xmlnsMap.put(str[0], str[1].replaceAll("\"", ""))
        }
    }

    xmlnsMap.each {key,value->
        println(key+"_"+value)
    }
}